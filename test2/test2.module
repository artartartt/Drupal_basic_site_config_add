<?php

use Drupal\Core\Form\FormState;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Database\Database;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Drupal\Core\Form\FormBase;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\HtmlCommand;
use Drupal\Core\Ajax\ReplaceCommand;
use Drupal\Core\Ajax\RedirectCommand;
use Drupal\Core\Url;
use Drupal\Core\Ajax\InvokeCommand;

function test2_form_system_site_information_settings_alter(&$form, &$form_state, $form_id) {
  $service_config = \Drupal::service('config.factory')->getEditable('foo.bar');

//  dump(\Drupal::service('config.factory')->getEditable('foo.bar')->set('foo', 'foo')->save());
//  $service_config->set('count', 2)->save();

  $num_names = $service_config->get('count');
  if ($num_names === NULL) {
    $num_names = 1;
    $service_config->set('count', 1)->save();
  }
//  $form_state->set('num_names', 99);
  $form['names_fieldset'] = [
    '#type' => 'fieldset',
    '#title' => 'Site name',
    '#prefix' => '<div id="names-fieldset-wrapper">',
    '#suffix' => '</div>',
  ];
  $all_info = $service_config->get('all_info');
//  dump($all_info);
  for ($i = 0; $i < $num_names; $i++) {
    $form['names_fieldset'][$i] = [
      '#type' => 'fieldset',
      '#title' => 'Site ' . ' ' . ($i + 1),
    ];
    $form['names_fieldset'][$i]['name'.$i] = [
      '#type' => 'textfield',
      '#title' => 'Name',
      '#required_but_empty' => 'Please enter Name',
      "#default_value" => $all_info ['name'.$i],
      '#required' => TRUE,

    ];
    $form['names_fieldset'][$i]['link'.$i] = [
      '#type' => 'textfield',
      '#title' => 'Link',
      '#required_but_empty' => 'Please enter Link',
      "#default_value" => $all_info ['link'.$i] ,
      '#required' => TRUE,

    ];
  }
  $form['names_fieldset']['actions'] = [
    '#type' => 'actions',
  ];
  $form['actions']['#type'] = 'actions';
  $form['#submit'][] = 'upup_taxonomy_form_submit';
  $form['names_fieldset']['actions']['add_name'] = [
    '#type' => 'submit',
    '#value' => 'Add ',
    '#submit' => ['addOneBlock'],
    '#ajax' => [
      'callback' => 'addmoreSiteCallback',
      'wrapper' => 'names-fieldset-wrapper',
    ],
  ];
  if ($num_names > 1) {
    $form['names_fieldset']['actions']['remove_name'] = [
      '#type' => 'submit',
      '#value' => 'Remove ',
      '#submit' => ['removeCallback'],
      '#ajax' => [
        'callback' => 'addmoreSiteCallback',
        'wrapper' => 'names-fieldset-wrapper',
      ],
    ];
  }
//  addmoreSiteCallback($form);
//dump($service_config->get('all_info'));
}

function upup_taxonomy_form_submit(&$form,FormStateInterface $form_state){
  $service_config = \Drupal::configFactory()->getEditable('foo.bar');

  $all_info = [];
  $service_config->set('all_info', $all_info)->save();
  $count=0;
  //ind petqa cikl fram ete tiva mtnem mejic link,name vercnem
    for($i=0;$i<count($form['names_fieldset']);$i++){
      if($form['names_fieldset'][$i] > 0){
//        dump($form['names_fieldset'][$i]);
        $all_info ['name'.$count] = $form['names_fieldset'][$i]['name'.$count]['#value'];
        $all_info ['link'.$count] = $form['names_fieldset'][$i]['link'.$count]['#value'];
        $count++;
      }
    }
  $service_config = \Drupal::configFactory()->getEditable('foo.bar');
  $service_config->set('all_info', $all_info)->save();
}

function addOneBlock(array &$form,FormStateInterface $form_state)
{

  $service_config = \Drupal::service('config.factory')->getEditable('foo.bar');
  $name_field = $service_config->get('count');
  $add_button = $name_field + 1;
  $service_config->set('count', $add_button)->save();
  $form_state->setRebuild();
}

function addmoreSiteCallback(array &$form)
{
  return $form['names_fieldset'];
}

//remove block if block count > 1
function removeCallback(array &$form,FormStateInterface $form_state)
{
  $service_config = \Drupal::service('config.factory')->getEditable('foo.bar');

  $name_field = $service_config->get('count');
  if ($name_field > 1) {
    $remove_button = $name_field - 1;
    $service_config->set('count', $remove_button)->save();
  }
  $form_state->setRebuild();
}


